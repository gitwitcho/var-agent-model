/*
 * Copyright (c) 2011-2014 Gilbert Peffer, Barbara Llacay
 * 
 * The source code and software releases are available at http://code.google.com/p/systemic-risk/
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package info.financialecology.finance.utilities.test;

import java.io.IOException;

import info.financialecology.finance.utilities.datastruct.DoubleTimeSeries;
import info.financialecology.finance.utilities.datastruct.DoubleTimeSeriesList;
import info.financialecology.finance.utilities.output.CsvResultWriter;
import info.financialecology.finance.utilities.output.CsvResultReader;

import cern.colt.list.DoubleArrayList;
import cern.colt.matrix.impl.DenseDoubleMatrix2D;

/**
 * @author Gilbert Peffer
 *
 */
public class TryingVersatileTimeSeries {

    /**
     * @param args
     */
    public static void main(String[] args) {
        
        String fileName;
        CsvResultWriter writer;
        CsvResultReader reader;

        DoubleArrayList dal = new DoubleArrayList(new double [] {0, 1, 2, 3, 4});
        fileName = "./resources/test/tmp/test_dal.csv";

        writer = new CsvResultWriter(fileName);
        writer.write(dal);
        
        reader = new CsvResultReader(fileName);
        DenseDoubleMatrix2D matrix = (DenseDoubleMatrix2D) reader.readDoubleMatrix2D(false, false);
        
        System.out.println(matrix);
        
        // ----------------------------------------------------------
        
        DoubleTimeSeries dts = new DoubleTimeSeries("test_dts");
        fileName = "./resources/test/tmp/test_dts.csv";
        
        for (int i = 0; i < 20; i++)
            dts.add(Math.pow(i, 2));

        writer = new CsvResultWriter(fileName);
        writer.write(dts);
        
        reader = new CsvResultReader(fileName);
        DoubleTimeSeries dtsOut = (DoubleTimeSeries) reader.readDoubleTimeSeries(false, false);
        
        System.out.println(dtsOut);
        
        // ----------------------------------------------------------

        DoubleTimeSeriesList dtsl = new DoubleTimeSeriesList();
        fileName = "./resources/test/tmp/test_dtsl.csv";

        for (int i = 0; i < 20; i++) {
            DoubleTimeSeries dts1 = new DoubleTimeSeries();

            for (int j = 0; j < 10; j++) {
                dts1.add(Math.pow(i, 2) + 100 * j);
            }
            
            dtsl.add(dts1);
        }
        
        writer = new CsvResultWriter(fileName);
        writer.write(dtsl, new Object[] {"day", "TS"});
    }

}
